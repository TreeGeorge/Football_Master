<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="UsersMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="usersMap" type="com.newdeal.footballMaster.model.Users">

    	<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="id" column="id" />
        <result property="email" column="email" />
		<result property="name" column="name" />
		<result property="gender" column="gender" />
		<result property="birthday" column="birthday" />
		<result property="balance" column="balance" />
		<result property="fair_point" column="fair_point" />
		<result property="phone_number" column="phone_number" />
		
    </resultMap>
    
    <!-- 추후 유저편의성을위해 리프레시 토큰을 DB에 저장할 가능성이 있음 -->
    <!-- user access token 부여 -->
	<!-- <update id="setAccessToken" parameterType="com.newdeal.footballMaster.model.User"> -->
	<!--	UPDATE user SET access_token = #{access_token} WHERE id = #{id}; -->
	<!-- </update> -->
	
	<!-- 추후 유저편의성을위해 리프레시 토큰을 DB에 저장할 가능성이 있음 -->
	<!-- 세션에 저장된 토큰값과 DB 토큰값 비교 -->
    <!-- <select id="verifyUser" parameterType="com.newdeal.footballMaster.model.User" -->
    <!--     resultMap="userMap"> -->
    <!--     SELECT id FROM user -->
	<!-- 	WHERE access_token = #{access_token};  -->
    <!-- </select> -->
    
    <!-- 유저 정보 가져오기 -->
    <select id="selectUser" parameterType="com.newdeal.footballMaster.model.Users"
        resultMap="usersMap">
        SELECT id, email, name, IF(gender='M', '남성', '여성') AS gender,
        	   birthday, balance, fair_point, phone_number
        FROM users
		WHERE email = #{email};
    </select>
    
    <!-- 유저 생성 -->
	<insert id="createUser" parameterType="com.newdeal.footballMaster.model.Users"
	useGeneratedKeys="false" keyProperty="id">
		INSERT INTO users (email)
		VALUES (#{email});
	</insert> 
	
	<!-- 유저 정보 변경 -->
	<update id="updateUser" parameterType="com.newdeal.footballMaster.model.Users">
		UPDATE users 
		SET gender = #{gender}, name = #{name}, birthday = #{birthday}, phone_number = #{phone_number} 
		WHERE email = #{email};
	</update> 
	
	<!-- 유저 삭제 -->
	<delete id="deleteUser"
		parameterType="com.newdeal.footballMaster.model.Users">
		DELETE FROM users WHERE id = #{id};	
	</delete>
	
	<!-- 유저 은행 정보 삭제 -->
	<delete id="deleteUserBank"
		parameterType="com.newdeal.footballMaster.model.Users">
		DELETE FROM users_banks WHERE users_id = #{id};	
	</delete>
	
	<!-- 유저 매치 정보 삭제 -->
	<delete id="deleteUserMatches"
		parameterType="com.newdeal.footballMaster.model.Users">
		DELETE FROM users_matches WHERE users_id = #{id};	
	</delete>
	
	<!-- 유저 거래 내역 삭제 -->
	<!-- 거래내역은 유저가 삭제하더라도 가지고있는게 맞다고 생각함 -->
	<!-- 
	<delete id="deleteUserCash"
		parameterType="com.newdeal.footballMaster.model.Users">
		DELETE FROM users_cash WHERE users_id = #{id};	
	</delete>
	 -->


</mapper>