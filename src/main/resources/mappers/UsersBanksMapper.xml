<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="UsersBanksMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="usersBanksMap" type="com.newdeal.footballMaster.model.UsersBanks">

    	<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="id" column="id" />
        <result property="account_number" column="account_number" />
		<result property="account_holder" column="account_holder" />
		<result property="name" column="name" />
		<result property="banks_id" column="banks_id" />
		<result property="users_id" column="users_id" />
		
    </resultMap>
    
    <!-- 유저 환불 계좌 정보 가져오기 -->
    <select id="selectUserBank" parameterType="com.newdeal.footballMaster.model.UsersBanks"
        resultMap="usersBanksMap">
        SELECT account_number, account_holder, users_id, banks_id, b.name
        FROM banks b, users_banks u
        WHERE b.id = u.banks_id
		AND users_id = #{users_id}
        AND u.banks_id = (SELECT banks_id FROM users_banks WHERE users_id = #{users_id});
    </select>
    
    <!-- 유저 환불 계좌 생성 -->
	<insert id="createUserBank" parameterType="com.newdeal.footballMaster.model.UsersBanks"
	useGeneratedKeys="true" keyProperty="id">
		INSERT INTO users_banks (users_id, banks_id)
		VALUES (#{users_id}, 1);
	</insert> 
    
    <!-- 유저 환불 계좌 정보 변경 -->
	<update id="updateUserBank" parameterType="com.newdeal.footballMaster.model.UsersBanks">
		UPDATE users_banks SET account_number = #{account_number}, banks_id = #{banks_id}, account_holder = #{account_holder}
		WHERE users_id = #{users_id};
	</update>
	
	<!-- 은행 개수 가져오기 -->
    <select id="banksCount" parameterType="com.newdeal.footballMaster.model.UsersBanks"
        resultType="int">
        SELECT COUNT(name)
        FROM banks
    </select>

</mapper>