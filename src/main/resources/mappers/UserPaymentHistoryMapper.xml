<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="UserPaymentHistoryMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="userPaymentHistoryMap" type="com.newdeal.footballMaster.model.UserPaymentHistory">

    	<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="id" column="id" />
        <result property="type" column="type" />
		<result property="price" column="price" />
		<result property="create_at" column="create_at" />
		<result property="user_id" column="user_id" />
		<result property="balance" column="balance" />
		
    </resultMap>
    
    <!-- 유저 결제 정보 가져오기 -->
    <select id="selectUserPaymentHistory" parameterType="com.newdeal.footballMaster.model.UserPaymentHistory"
        resultMap="userPaymentHistoryMap">
        SELECT IF(type='C', '충전', IF(type='R', '환불', '사용')) AS type, price, h.create_at, balance
        FROM user u, user_payment_history h
        WHERE u.id = h.user_id
		AND user_id = #{user_id};
    </select>
    
    <!-- 유저 캐시 충전 -->
	<insert id="chargeCash" parameterType="com.newdeal.footballMaster.model.UserPaymentHistory"
	useGeneratedKeys="true" keyProperty="id">
		INSERT INTO user_payment_history (type, price, user_id)
		VALUES ('C', #{price}, #{user_id});
	</insert> 
	
	<!-- 유저 캐시 환불 -->
	<insert id="refundCash" parameterType="com.newdeal.footballMaster.model.UserPaymentHistory"
	useGeneratedKeys="true" keyProperty="id">
		INSERT INTO user_payment_history (type, price, user_id)
		VALUES ('R', #{price}, #{user_id});
	</insert> 
	
	<!-- 유저 캐시 사용 -->
	<insert id="useCash" parameterType="com.newdeal.footballMaster.model.UserPaymentHistory"
	useGeneratedKeys="true" keyProperty="id">
		INSERT INTO user_payment_history (type, price, user_id)
		VALUES ('U', #{price}, #{user_id});
	</insert> 
	
	<!-- 유저 금액 변경 -->
	<update id="changeUserBalance" parameterType="com.newdeal.footballMaster.model.UserPaymentHistory">
		UPDATE user SET balance = #{balance} WHERE id = #{user_id};
	</update>


</mapper>